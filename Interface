public interface Exibivel {
    void exibirDados();
}

public abstract class Veiculo implements Exibivel {
    protected String placa;
    protected String modelo;
    protected int ano;

    public Veiculo(String placa, String modelo, int ano) {
        this.placa = placa;
        this.modelo = modelo;
        this.ano = ano;
    }

    public String getPlaca() {
        return placa;
    }

    public String getModelo() {
        return modelo;
    }

    public int getAno() {
        return ano;
    }

    public void setPlaca(String placa) {
        this.placa = placa;
    }

    public void setModelo(String modelo) {
        this.modelo = modelo;
    }

    public void setAno(int ano) {
        this.ano = ano;
    }
}

public class Carro extends Veiculo {
    private int qtdPortas;

    public Carro(String placa, String modelo, int ano, int qtdPortas) {
        super(placa, modelo, ano);
        this.qtdPortas = qtdPortas;
    }

    @Override
    public void exibirDados() {
        System.out.println("Carro - Modelo: " + modelo + " | Placa: " + placa + " | Ano: " + ano + " | Portas: " + qtdPortas);
    }
}

public class Moto extends Veiculo {
    private int cilindrada;

    public Moto(String placa, String modelo, int ano, int cilindrada) {
        super(placa, modelo, ano);
        this.cilindrada = cilindrada;
    }

    @Override
    public void exibirDados() {
        System.out.println("Moto - Modelo: " + modelo + " | Placa: " + placa + " | Ano: " + ano + " | Cilindrada: " + cilindrada + "cc");
    }
}

public class Caminhao extends Veiculo {
    private double capacidadeCarga;

    public Caminhao(String placa, String modelo, int ano, double capacidadeCarga) {
        super(placa, modelo, ano);
        this.capacidadeCarga = capacidadeCarga;
    }

    @Override
    public void exibirDados() {
        System.out.println("Caminh√£o - Modelo: " + modelo + " | Placa: " + placa + " | Ano: " + ano + " | Carga: " + capacidadeCarga + " toneladas");
    }
}

